name: Rust + Tauri CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [windows-latest, macOS-latest, ubuntu-latest]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        profile: minimal
        override: true

  

    - name: Install TAURI CLI
      run: |
        python -m pip install --upgrade pip
        pip install tauri-cli
        
    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
         node-version: '16'  # or another supported version

    - name: Install Tauri CLI    
      run: npm install -g @tauri-apps/cli
    
    - name: Build for ${{ matrix.os }}
      run: |
        # Set architecture (optional)
        if [ "$RUNNER_OS" == "Linux" ]; then
          export TAURI_TARGET=x86_64-unknown-linux-gnu
        elif [ "$RUNNER_OS" == "Windows" ]; then
          export TAURI_TARGET=x86_64-pc-windows-gnu
        elif [ "$RUNNER_OS" == "macOS" ]; then
          export TAURI_TARGET=x86_64-apple-darwin
        fi

        cargo tauri build --target $TAURI_TARGET

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: editor-${{ matrix.os }}
        path: ./target/tauri-apps/*
